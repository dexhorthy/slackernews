apiVersion: kots.io/v1beta1
kind: Config
metadata:
  name: slackernews-config
spec:
  groups:
    - name: postgres
      description: >
        This section can be used to configure the postgresql database required by SlackerNews. You
        can either deploy postgresql in the cluster or provide an external URI to an existing postgresql instance
        that you will use for SlackerNews.
      title: Postgresql
      items:
        - name: deploy_postgres
          type: bool
          title: Deploy Postgresql In Cluster
          default: "1"
        - name: postgres_password
          type: password
          title: Postgresql Password
          required: true
          hidden: true
          when: repl{{ ConfigOptionEquals "deploy_postgres" "1"}}
          value: repl{{ RandomString 40}}
        - name: postgres_external_uri
          type: text
          title: Postgresql URI
          required: true
          when: repl{{ ConfigOptionEquals "deploy_postgres" "0"}}
    - name: tls_and_ingress
      title: TLS and Ingress
      description: |
        You can customize how you will expose SlackerNews to the internet.
        Note that the domain you use will need to be publicly addressable with certs signed by a public authority 
        so it can receive webhooks from Slack.
        
        Common configurations include:
        
        - **ClusterIP** Using a Cluster IP and configuring your existing ingress controller to route traffic to SlackerNews
        - **NodePort** Using a NodePort and configuring an existing load balancer to route traffic to SlackerNews
        - **LoadBalancer** Using a LoadBalancer service and letting Kubernetes provision a load balancer for you
        - **Nginx** Deploying the included nginx service to handle TLS and proxying traffic to SlackerNews, and exposing that with a ClusterIP, NodePort, or LoadBalancer
        
        If you choose to use nginx, you'll see that this page has been pre-populated with self-signed certificates. 
        If you want, you can replace the self-signed certificates with your own.
        
        If you'll be using your own ingress controller or external load balancer, use the DNS name of that external address.
        
      items:
        - name: slackernews_domain
          title: Ingress Hostname
          help_text: The domain name at which you'll access SlackerNews. Don't include the `https://` or any path elements.
          type: text
          required: true
        - name: slackernews_service_type
          title: Slackernews Service Type
          type: select_one
          items:
            - name: ClusterIP
              title: ClusterIP
            - name: NodePort
              title: NodePort
            - name: LoadBalancer
              title: LoadBalancer
          default: ClusterIP
        - name: slackernews_node_port_port
          title: Slackernews Node Port
          help_text: > 
              (Optional) - The port to use for the NodePort service type. Leave this blank to have Kubernetes choose a port for you.
          type: text
          default: ""
          when: repl{{ ConfigOptionEquals "slackernews_service_type" "NodePort" }}
        - name: nginx_enabled
          title: Enable Nginx
          help_text: Deploy an nginx reverse proxy. Running nginx is required to customize the TLS configuration.
          type: bool
          default: "1"
        - name: nginx_service_type
          title: Nginx Service Type
          help_text: > 
              The service type to use for the nginx service. 
              If you're using an external http or tcp load balancer, you should use NodePort. 
              If you're running in a supported cloud provider and want Kubernetes to provision a Load Balancer, use LoadBalancer.
          type: select_one
          items:
            - name: ClusterIP
              title: ClusterIP
            - name: NodePort
              title: NodePort
            - name: LoadBalancer
              title: LoadBalancer
          default: ClusterIP
          when: repl{{ ConfigOptionEquals "nginx_enabled" "1" }}
        - name: nginx_node_port_port
          title: Nginx Node Port
          help_text: > 
              (Optional) - The port to use for the NodePort service type. Leave this blank to have Kubernetes choose a port for you.
          type: text
          default: ""
          when: repl{{ and (ConfigOptionEquals "nginx_enabled" "1") (ConfigOptionEquals "nginx_service_type" "NodePort") }}
        - name: tls_json
          title: TLS JSON
          type: textarea
          hidden: true
          value: |-
            repl{{ $ca := genCA (ConfigOption "ingress_hostname") 365 }}
            repl{{ $tls := dict "ca" $ca }}
            repl{{ $cert := genSignedCert (ConfigOption "ingress_hostname") (list ) (list (ConfigOption "ingress_hostname")) 365 $ca }}
            repl{{ $_ := set $tls "cert" $cert }}
            repl{{ toJson $tls }}
        - name: tls_ca
          title: Signing Authority
          type: textarea
          value: repl{{ fromJson (ConfigOption "tls_json") | dig "ca" "Cert" "" }}
          when: repl{{ ConfigOptionEquals "nginx_enabled" "1" }}
        - name: tls_cert
          title: TLS Cert
          type: textarea
          value: repl{{ fromJson (ConfigOption "tls_json") | dig "cert" "Cert" "" }}
          when: repl{{ ConfigOptionEquals "nginx_enabled" "1" }}
        - name: tls_key
          title: TLS Key
          type: textarea
          value: repl{{ fromJson (ConfigOption "tls_json") | dig "cert" "Key" "" }}
          when: repl{{ ConfigOptionEquals "nginx_enabled" "1" }}
    - name: slack
      title: Slack Settings
      description: |
        If desired, you can preconfigure the slack settings for SlackerNews. 
        These are required for logging into SlackerNews and pulling/organizing content from your slack instance.
        If you don't preconfigure these settings, you'll be prompted to configure them when you first access SlackerNews.
        
        Instructions on how to configure your slack application and collect these values can be found in [the SlackerNewa slack documentation](https://docs.slackernews.io/slack/).
      items:
        - name: slack_user_token
          title: User OAuth Token
          type: password
        - name: slack_bot_token
          title: Bot User OAuth Token
          type: password
        - name: slack_clientid
          title: Slack Client ID
          type: text
        - name: slack_clientsecret
          title: Slack Client Secret
          type: password
    - name: admin_users
      title: Admin Users
      description: |
        For this section, you can specify a list of users that will be granted admin access to SlackerNews.
        Provide a comma-separated list of email addresses for the users you want to grant admin access to.
        Since SlackerNews users Slack for authentication, these email addresses must match the users' email addresses in Slack.

        Users on this list will be able to access the `/admin` route, allowing them to manage content, users, and settings.
        
        For any users who receive admin permissions from this setting, the change will take effect the next time
        they are active in the slackernews application.
      items:
        - name: slackernews_admin_user_emails
          title: Admin Users
          type: text
