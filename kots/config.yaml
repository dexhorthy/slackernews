apiVersion: kots.io/v1beta1
kind: Config
metadata:
  name: slackernews-config
spec:
  groups:
    - name: postgres
      description: >
        This section can be used to configure the postgresql database required by slackernews. You
        can either deploy postgresql in the cluster or provide an external URI to an existing postgresql instance
        that you will use for slackernews.
      title: Postgresql
      items:
        - name: deploy_postgres
          type: bool
          title: Deploy Postgresql In Cluster
          default: "1"
        - name: postgres_password
          type: password
          title: Postgresql Password
          required: true
          hidden: true
          when: repl{{ ConfigOptionEquals "deploy_postgres" "1"}}
          value: repl{{ RandomString 40}}
        - name: postgres_external_uri
          type: text
          title: Postgresql URI
          required: true
          when: repl{{ ConfigOptionEquals "deploy_postgres" "0"}}
    - name: tls
      title: TLS
      description: |
        This section has been pre-populated with domains and self-signed certificates. 
        If you want, you can replace the self-signed certificates with your own.
        Note that the domain you use will need to be publicly addressable with certs signed by a public authority 
        so it can receive webhooks from Slack.
        
        If you'll be using your own ingress controller or external load balancer, use the DNS name or IP
        of that external address.
      items:
        - name: slackernews_domain
          title: Ingress Hostname
          type: text
          required: true
        - name: tls_json
          title: TLS JSON
          type: textarea
          hidden: true
          value: |-
            repl{{ $ca := genCA (ConfigOption "ingress_hostname") 365 }}
            repl{{ $tls := dict "ca" $ca }}
            repl{{ $cert := genSignedCert (ConfigOption "ingress_hostname") (list ) (list (ConfigOption "ingress_hostname")) 365 $ca }}
            repl{{ $_ := set $tls "cert" $cert }}
            repl{{ toJson $tls }}
        - name: tls_ca
          title: Signing Authority
          type: textarea
          value: repl{{ fromJson (ConfigOption "tls_json") | dig "ca" "Cert" "" }}
        - name: tls_cert
          title: TLS Cert
          type: textarea
          value: repl{{ fromJson (ConfigOption "tls_json") | dig "cert" "Cert" "" }}
        - name: tls_key
          title: TLS Key
          type: textarea
          value: repl{{ fromJson (ConfigOption "tls_json") | dig "cert" "Key" "" }}
