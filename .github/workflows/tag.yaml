name: release

on:
  push:
    tags:
    - "v*.*.*"
env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-22.04
    outputs:
      tags: ${{ steps.web-meta.outputs.tags }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Extract metadata (tags, labels) for web image
        id: web-meta
        uses: docker/metadata-action@v4
        with:
          tags: |
                type=sha,format=long
                type=schedule
                type=semver,pattern={{version}}
                type=ref,event=branch
                type=ref,event=tag
                type=ref,event=pr
          images: ${{ env.REGISTRY }}/${{ secrets.GHCR_NAMESPACE }}/slackernews-web

      - uses: int128/docker-build-cache-config-action@v1
        id: cache
        with:
          image: ghcr.io/${{ github.repository }}/cache

      - name: Build web image
        uses: docker/build-push-action@v4
        with:
          context: ./slackernews
          tags: ${{ steps.web-meta.outputs.tags }}
          labels: ${{ steps.web-meta.outputs.labels }}
          file: ./deploy/Dockerfile.web
          push: true
          cache-from: ${{ steps.cache.outputs.cache-from }}
          cache-to: ${{ steps.cache.outputs.cache-to }}

      - name: Build nginx image
        uses: docker/build-push-action@v4
        with:
          context: .
          tags: ${{ env.REGISTRY }}/${{ secrets.GHCR_NAMESPACE }}/slackernews-nginx:0.0.0-alpha.${{ steps.vars.outputs.sha_short }}
          file: ./deploy/Dockerfile.nginx
          push: true
          cache-from: ${{ steps.cache.outputs.cache-from }}
          cache-to: ${{ steps.cache.outputs.cache-to }}

  release:
    runs-on: ubuntu-22.04
    needs:
      - build
    steps:
      - uses: actions/checkout@v4

      - run: make chart

      - id: get_version
        uses: battila7/get-version-action@v2

      - uses: azure/setup-helm@v1
        with:
          version: "3.9.0"
        id: install

      - name: Update the values.yaml with the registry name
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          include: 'chart/slackernews/values.yaml'
          find: '$REGISTRY'
          replace: ${{ secrets.REPLICATED_PROXY_REGISTRY_CNAME || 'proxy.replicated.com' }}
          regex: false

      - name: Update the values.yaml with the image path
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          include: 'chart/slackernews/values.yaml'
          find: '$IMAGE'
          replace: 'proxy/${{ secrets.REPLICATED_APP }}/ghcr.io/${{ secrets.GHCR_NAMESPACE }}/slackernews-web'
          regex: false

      - name: Update the values.yaml with the image path
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          include: 'chart/slackernews/values.yaml'
          find: '$TAG'
          replace: '${{ steps.get_version.outputs.version-without-v }}'
          regex: false

      - name: Update the values.yaml with the nginx image path
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          include: 'chart/slackernews/values.yaml'
          find: '$NGINX_IMAGE'
          replace: 'proxy/${{ secrets.REPLICATED_APP }}/ghcr.io/${{ secrets.GHCR_NAMESPACE }}/slackernews-nginx:${{ steps.get_version.outputs.version-without-v }}'
      - name: Update the values.yaml with the nginx image path
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          include: 'kots/slackernews-chart.yaml'
          find: '$IMAGE_WITH_TAG'
          replace: 'ghcr.io/${{ secrets.GHCR_NAMESPACE }}/slackernews-web:${{ steps.get_version.outputs.version-without-v }}'
          regex: false

      - id: package-helm-chart
        run: |
          cd chart/slackernews && \
          helm dep up --debug && \
          cd .. && \
          helm package \
            --app-version=${{ steps.get_version.outputs.version-without-v }} \
            --version=${{ steps.get_version.outputs.version-without-v }} \
            ./slackernews

      - name: Copy the helm chart to the kots directory
        run: cp ./chart/slackernews-${{ steps.get_version.outputs.version-without-v }}.tgz ./kots

      - name: Update the version in the KOTS HelmChart kind
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          include: 'kots/slackernews-chart.yaml'
          find: '$VERSION'
          replace: '${{ steps.get_version.outputs.version-without-v }}'
          regex: false

      - name: Update the KOTS HelmChart kind with the registry name
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          include: 'kots/slackernews-chart.yaml'
          find: '$REGISTRY'
          replace: '${{ secrets.REPLICATED_PROXY_REGISTRY_CNAME }}'
          regex: false

      - name: Update the KOTS HelmChart kind with the image namespace
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          include: 'kots/slackernews-chart.yaml'
          find: '$NAMESPACE'
          replace: '${{ secrets.GHCR_NAMESPACE }}'
          regex: false

      - name: Create the unstable release
        uses: replicatedhq/action-kots-release@configurable-endpoint
        with:
          replicated-app: ${{ secrets.REPLICATED_APP }}
          replicated-api-token: ${{ secrets.REPLICATED_TOKEN }}
          replicated-api-origin: https://api.replicated.com/vendor
          yaml-dir: ./kots
          promote-channel: "Unstable"
          version: ${{ steps.get_version.outputs.version-without-v }}
