postgres:
  # tells slackernews to use postgres as the
  # backing database instead of sqlite
  enabled: false
  # deploys a postgresql workload to the cluster
  deploy_postgres: false
  # the password to use with deploy_postgres
  password: ""
  # if deploy_postgres is false, provide a URI
  uri: ""

  # use a value in an existing secret instead of
  # .postgres.password OR .postgres.uri
  existingSecretName: ""
  # key in the secret that contains the password
  existingSecretPasswordKey: ""
  # key in the secret that contains the uri
  existingSecretUriKey: ""
  # service type if deploy_postgres is true
  service:
    type: ClusterIP
    nodePort:
      port:

sqlite:
  enabled: true

ingress:
  annotations: {}
  enabled: false
  ingressClassName: ""
nginx:
  service:
    type: ClusterIP
    nodePort:
      port:

service:
  tls:
    enabled: false
    existingSecretName: ""
    existingSecretCertKey: ""
    existingSecretKeyKey: ""
    cert: ""
    key: ""

slack:
  botToken: ""
  userToken: ""
  clientId: ""
  clientSecret: ""
  existingSecretName: ""
  existingSecretBotTokenKey: ""
  existingSecretUserTokenKey: ""
  existingSecretClientIdKey: ""
  existingSecretClientSecretKey: ""

slackernews:
  domain: ""
  adminUserEmails: ""

images:
  pullSecrets:
    replicated:
      name: proxypullsecret
  nginx:
    repository: $REGISTRY/$NGINX_IMAGE
    pullPolicy: IfNotPresent
  slackernews:
    repository: $REGISTRY/$IMAGE
    pullPolicy: IfNotPresent
